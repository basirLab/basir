export default async function handler(req, res) {
  const { question, answer } = req.body;

  const systemPrompt = `
You are an expert in critical thinking assessment. Evaluate the student's answer using CT1 to CT6. 
Give a score (1–4) and justification for each applicable category.
Then:
- Analyze the weaknesses (60–80 words)
- Suggest improvements (60–80 words)
- Rewrite the answer as a model Level 4 (100–140 words)
Respond in plain text, structured and readable.
`;

  const userPrompt = `QUESTION:\n${question}\n\nSTUDENT ANSWER:\n${answer}`;

  const payload = {
    model: "gpt-4",
    temperature: 0.0,
    stream: true,
    messages: [
      { role: "system", content: systemPrompt },
      { role: "user", content: userPrompt }
    ]
  };

  const openaiRes = await fetch("https://api.openai.com/v1/chat/completions", {
    method: "POST",
    headers: {
      Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
      "Content-Type": "application/json"
    },
    body: JSON.stringify(payload)
  });

  res.setHeader("Content-Type", "text/event-stream");
  res.setHeader("Cache-Control", "no-cache");
  res.setHeader("Connection", "keep-alive");

  const reader = openaiRes.body.getReader();
  const decoder = new TextDecoder("utf-8");

  while (true) {
    const { value, done } = await reader.read();
    if (done) break;
    const chunk = decoder.decode(value);
    const lines = chunk.split("\n").filter(line => line.trim().startsWith("data:"));

    for (const line of lines) {
      const msg = line.replace(/^data: /, "");
      if (msg === "[DONE]") {
        res.write("data: [DONE]\n\n");
        res.end();
        return;
      }

      try {
        const parsed = JSON.parse(msg);
        const content = parsed.choices?.[0]?.delta?.content;
        if (content) {
          res.write(`data: ${content}\n\n`);
        }
      } catch (err) {
        console.error("Streaming error:", err);
      }
    }
  }
}
